name: Nubia SM8350 Kernel Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v2

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bison \
          build-essential \
          bc \
          ccache \
          curl \
          flex \
          gcc-aarch64-linux-gnu \
          git \
          libncurses5 \
          libncurses5-dev \
          libtinfo5 \
          make \
          wget \
          python3 \
          zip \
          zlib1g-dev

    - name: Download toolchain
      run: |
        git clone --depth=1 https://github.com/kdrag0n/proton-clang.git clang
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git gcc64
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9.git gcc32

    - name: Setup environment
      run: |
        echo "PATH=$GITHUB_WORKSPACE/clang/bin:$GITHUB_WORKSPACE/gcc64/bin:$GITHUB_WORKSPACE/gcc32/bin:$PATH" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
        echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "KBUILD_BUILD_USER=github-actions" >> $GITHUB_ENV
        echo "KBUILD_BUILD_HOST=github.com" >> $GITHUB_ENV

    - name: Build kernel
      run: |
        make O=out vendor/nubia_sm8350_defconfig
        make O=out -j$(nproc --all) \
          ARCH=arm64 \
          CC=clang \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-android- \
          CROSS_COMPILE_ARM32=arm-linux-androideabi-

    - name: Create AnyKernel3 package
      run: |
        git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git
        cp out/arch/arm64/boot/Image.gz AnyKernel3/
        cp out/arch/arm64/boot/dtbo.img AnyKernel3/
        cp out/arch/arm64/boot/dts/vendor/qcom/*.dtb AnyKernel3/dtb/
        cd AnyKernel3
        zip -r9 ../kernel-nubia-sm8350.zip *

    - name: Upload kernel package
      uses: actions/upload-artifact@v3
      with:
        name: kernel-nubia-sm8350
        path: kernel-nubia-sm8350.zip
